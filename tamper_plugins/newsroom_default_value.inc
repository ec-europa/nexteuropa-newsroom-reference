<?php

/**
 * @file
 * Set field to default value.
 */

$plugin = array(
  'form'     => 'nexteuropa_newsroom_tamper_default_value_form',
  'callback' => 'nexteuropa_newsroom_tamper_default_value_callback',
  'name'     => 'Set default value if field is empty',
  'multi'    => 'direct',
  'category' => 'Other',
);

/**
 * Gets tamper form.
 *
 * @param object $importer
 *   Importer object.
 * @param string $element_key
 *   Element key.
 * @param array $settings
 *   Tamper settings.
 *
 * @return array
 *   Form array.
 */
function nexteuropa_newsroom_tamper_default_value_form($importer, $element_key, $settings) {
  $form = array();

  $form['default_value'] = array(
    '#type' => 'textarea',
    '#title' => t('Value'),
    '#default_value' => isset($settings['default_value']) ? $settings['default_value'] : '',
    '#description' => t('This field will be set to the value specified.'),
  );

  $replace = array();

  foreach (feeds_tamper_get_unique_source_list($importer) as $source) {
    $replace[] = '[' . $source . ']';
  }

  $form['help'] = array(
    '#type' => 'fieldset',
    '#title' => t('Available Replacement Patterns'),
    '#collapsed' => FALSE,
    '#collapsible' => FALSE,
    '#value' => theme('item_list', array('items' => $replace)),
  );

  return $form;
}

/**
 * Processes the value.
 *
 * @param array $result
 *   Parsed results.
 * @param string $item_key
 *   Current item key.
 * @param string $element_key
 *   Element key.
 * @param string $field
 *   Field value.
 * @param array $settings
 *   Tamper settings.
 * @param string $source
 *   Source.
 */
function nexteuropa_newsroom_tamper_default_value_callback($result, $item_key, $element_key, &$field, $settings, $source) {
  // If the field is empty we set default value.
  if (!$field) {
    $trans = array();
    $item = $result->items[$item_key];
    foreach ($item as $key => $value) {
      $trans['[' . $key . ']'] = is_array($value) ? reset($value) : $value;
    }
    $field = strtr($settings['default_value'], $trans);
  }
}
